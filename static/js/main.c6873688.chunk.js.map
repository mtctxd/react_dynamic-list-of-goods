{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","splice","getRedGoods","filter","good","color","getGreenGoods","a","result","GoodsList","goods","map","style","id","name","App","useState","setGoods","loadGoods","goodsGetterFunction","goodsFromServer","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8OAGaA,EAAS,WACpB,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAC,GAAQ,OAAIA,EAASG,OAAO,EAAG,OAG5BC,EAAc,WACzB,OAAOP,IACJE,MAAK,SAAAC,GAAQ,OAAIA,EAASK,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aAGtCC,EAAa,uCAAG,4BAAAC,EAAA,sEACNZ,IADM,cACrBa,EADqB,yBAGpBA,EAAOL,QAAO,SAAAC,GAAI,MAAmB,UAAfA,EAAKC,UAHP,2CAAH,qD,OCZbI,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAP,GAAI,OACb,qBAAkBQ,MAAO,CAAEP,MAAOD,EAAKC,OAAvC,UACGD,EAAKS,GACL,IACAT,EAAKU,OAHCV,EAAKS,UCkDPE,EA9CO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAON,EAAP,KAAcO,EAAd,KAEMC,EAAY,SAACC,GACjBA,IACGtB,MAAK,SAAAuB,GAAe,OACnBH,EAASG,OAIf,OACE,qCACE,uDACA,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAUvB,IAF3B,4BAOA,wBACE0B,KAAK,SACLC,QAAS,kBAAMJ,EAAUlB,IAF3B,gCAOA,wBACEqB,KAAK,SACLC,QAAS,kBAAMJ,EAAUhB,IAF3B,4BAOA,wBACEmB,KAAK,SACLC,QAAS,kBAAMJ,EAAUZ,IAF3B,8BAOA,cAAC,EAAD,CAAWI,MAAOA,QCpDxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c6873688.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then(response => response.splice(0, 5));\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return getAll()\n    .then(response => response.filter(good => good.color === 'red'));\n};\n\nexport const getGreenGoods = async (): Promise<Good[]> => {\n  const result = await getAll();\n\n  return result.filter(good => good.color === 'green');\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>\n          {good.id}\n          {' '}\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport {\n  getAll,\n  get5First,\n  getRedGoods,\n  getGreenGoods,\n} from './api/goods';\nimport { GoodsList } from './components/GoodsList';\n\ntype GoodsGetterFunction = () => Promise<Good[]>;\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const loadGoods = (goodsGetterFunction: GoodsGetterFunction) => {\n    goodsGetterFunction()\n      .then(goodsFromServer => (\n        setGoods(goodsFromServer)\n      ));\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(getAll)}\n      >\n        Load All goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadGoods(getGreenGoods)}\n      >\n        Load green goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}